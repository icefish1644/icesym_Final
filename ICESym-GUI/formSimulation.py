# -*- coding: utf-8 -*-
# generated by wxGlade 0.6.3 on Mon May 18 09:43:57 2009

import wx
from validations import numberValidator
from help_texts import help_simulation

# begin wxGlade: dependencies
# end wxGlade

# begin wxGlade: extracode

# end wxGlade

class formSimulation(wx.Dialog):
    data = {}
    listas = ['rpms']
    def __init__(self, *args, **kwds):
        # begin wxGlade: formSimulation.__init__
        kwds["style"] = wx.DEFAULT_DIALOG_STYLE|wx.RESIZE_BORDER|wx.THICK_FRAME
        wx.Dialog.__init__(self, *args, **kwds)
        self.panel_buttons = wx.Panel(self, -1)
        self.panel_configure = wx.Panel(self, -1)
        self.configure_notebook = wx.Notebook(self.panel_configure, -1, style=0)
        self.notebook_saves = wx.ScrolledWindow(self.configure_notebook, -1, style=wx.TAB_TRAVERSAL)
        self.notebook_general = wx.ScrolledWindow(self.configure_notebook, -1, style=wx.TAB_TRAVERSAL)
        self.label_0 = wx.StaticText(self.notebook_general, -1, "List of RPMS (separated with \",\"):")
        self.data['rpms'] = wx.TextCtrl(self.notebook_general, -1, "")
        self.label_1 = wx.StaticText(self.notebook_general, -1, "Number of Cycles per rpm:")
        self.data['ncycles'] = wx.TextCtrl(self.notebook_general, -1, "")
        self.label_2 = wx.StaticText(self.notebook_saves, -1, "Saving Frequency :")
        self.data['nsave'] = wx.TextCtrl(self.notebook_saves, -1, "")
        self.label_3 = wx.StaticText(self.notebook_general, -1, "Max. Delta Crank Angle:")
        self.data['dtheta_rpm'] = wx.TextCtrl(self.notebook_general, -1, "")
        self.label_4 = wx.StaticText(self.notebook_general, -1, "Courant Number: ")
        self.data['Courant'] = wx.TextCtrl(self.notebook_general, -1, "")
        self.label_5 = wx.StaticText(self.notebook_general, -1, "Gas Specific Heat Ratio:")
        self.data['ga'] = wx.TextCtrl(self.notebook_general, -1, "")
        self.label_6 = wx.StaticText(self.notebook_general, -1, "Viscous Flow:")
        self.data['viscous_flow'] = wx.TextCtrl(self.notebook_general, -1, "")
        self.label_7 = wx.StaticText(self.notebook_general, -1, "Heat Flow:")
        self.data['heat_flow'] = wx.TextCtrl(self.notebook_general, -1, "")
        self.label_8 = wx.StaticText(self.notebook_general, -1, "Gas Constat:")
        self.data['R_gas'] = wx.TextCtrl(self.notebook_general, -1, "")
        self.label_9 = wx.StaticText(self.notebook_general, -1, "Strokes per Cycle:")
        self.data['nstroke'] = wx.RadioBox(self.notebook_general, -1, "", choices=["2", "4"], majorDimension=0, style=wx.RA_SPECIFY_ROWS)
        self.label_10 = wx.StaticText(self.notebook_general, -1, "Engine Geometry:")
        self.data['engine_type'] = wx.RadioBox(self.notebook_general, -1, "", choices=["Alternative", "Opposed-Piston"], majorDimension=0, style=wx.RA_SPECIFY_ROWS)
        self.label_11 = wx.StaticText(self.notebook_general, -1, "Ignition Order:")
        self.data['ig_order'] = wx.TextCtrl(self.notebook_general, -1, "")
        self.label_12 = wx.StaticText(self.notebook_saves, -1, "File Save State: ")
        self.data['filesave_state'] = wx.TextCtrl(self.notebook_saves, -1, "")
        self.label_13 = wx.StaticText(self.notebook_saves, -1, "File Save Species:")
        self.data['filesave_spd'] = wx.TextCtrl(self.notebook_saves, -1, "")
        self.label_14 = wx.StaticText(self.notebook_saves, -1, "Get Initial State From: ")
        self.data['get_state'] = wx.RadioBox(self.notebook_saves, -1, "", choices=["Here", "File", "Solver"], majorDimension=0, style=wx.RA_SPECIFY_ROWS)
        self.label_15 = wx.StaticText(self.notebook_saves, -1, "find:")
        self.button_1 = wx.Button(self.notebook_saves, -1, "load...")
        self.filename = wx.StaticText(self.notebook_saves, -1, "\" \"")
        self.data['filein_state'] = wx.TextCtrl(self.notebook_saves, -1, "")
        self.data['calc_engine_data'] = wx.CheckBox(self.notebook_saves, -1, "Calculate Engine Performance Characteristics")
        self.label_17 = wx.StaticText(self.notebook_saves, -1, "Appending Frequency :")
        self.data['nappend'] = wx.TextCtrl(self.notebook_saves, -1, "")
        self.data['folder_name'] = wx.TextCtrl(self.notebook_saves, -1, "")
        self.label_18 = wx.StaticText(self.notebook_saves, -1, "Folder Name:")
        self.panel_23 = wx.Panel(self.notebook_saves, -1)
        self.accept = wx.Button(self.panel_buttons, wx.ID_OK, "")
        self.cancel = wx.Button(self.panel_buttons, wx.ID_CANCEL, "")
        self.help = wx.ContextHelpButton(self.panel_buttons)

        self.__set_properties()
        self.setContextualHelp()
        self.__do_layout()

        self.Bind(wx.EVT_RADIOBOX, self.onNStroke, self.data['nstroke'])
        self.Bind(wx.EVT_RADIOBOX, self.onChangeGetState, self.data['get_state'])
        self.Bind(wx.EVT_BUTTON, self.onOpenDialogFile, self.button_1)
        self.Bind(wx.EVT_NOTEBOOK_PAGE_CHANGED, self.onChangeGetState, self.configure_notebook)
        self.Bind(wx.EVT_BUTTON, self.ConfigureAccept, self.accept)
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: formSimulation.__set_properties
        self.SetTitle("Configure Simulation")
        self.SetSize(wx.DLG_SZE(self, (300, 230)))
        self.SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, ""))
        self.label_0.SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['rpms'].SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        #self.data['rpms'].SetValidator(numberValidator())
        self.label_1.SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['ncycles'].SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['ncycles'].SetValidator(numberValidator())
        self.label_2.SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['nsave'].SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['nsave'].SetValidator(numberValidator())
        self.label_3.SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['dtheta_rpm'].SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['dtheta_rpm'].SetValidator(numberValidator())
        self.label_4.SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['Courant'].SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['Courant'].SetValidator(numberValidator())
        self.label_5.SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['ga'].SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['ga'].SetValidator(numberValidator())
        self.label_6.SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['viscous_flow'].SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['viscous_flow'].SetValidator(numberValidator())
        self.label_7.SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['heat_flow'].SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['heat_flow'].SetValidator(numberValidator())
        self.label_8.SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['R_gas'].SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['R_gas'].SetValidator(numberValidator())
        self.label_9.SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['nstroke'].SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['nstroke'].SetSelection(1)
        self.label_10.SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['engine_type'].SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['engine_type'].SetSelection(0)
        self.label_11.SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['ig_order'].SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        #self.data['ig_order'].SetValidator(numberValidator())
        self.notebook_general.SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.notebook_general.SetScrollRate(10, 10)
        self.label_12.SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['filesave_state'].SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.label_13.SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['filesave_spd'].SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.label_14.SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['get_state'].SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['get_state'].SetSelection(0)
        self.label_15.SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.button_1.SetMinSize(wx.DLG_SZE(self.button_1, (44, 10)))
        self.button_1.Enable(False)
        self.button_1.SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.filename.SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.BOLD, 0, ""))
        self.data['filein_state'].Hide()
        self.data['calc_engine_data'].SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['nappend'].SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.data['folder_name'].SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.label_17.SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.label_18.SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.notebook_saves.SetScrollRate(10, 10)
        self.configure_notebook.SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, ""))
        self.panel_configure.SetFont(wx.Font(8, wx.DEFAULT, wx.NORMAL, wx.NORMAL, 0, "Sans"))
        self.accept.SetMinSize(wx.DLG_SZE(self.accept, (52, 16)))
        self.cancel.SetMinSize(wx.DLG_SZE(self.cancel, (52, 16)))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: formSimulation.__do_layout
        configure_background = wx.BoxSizer(wx.VERTICAL)
        sizer_buttons = wx.GridSizer(1, 3, 0, 0)
        configure_sizer = wx.BoxSizer(wx.HORIZONTAL)
        grid_sizer_14 = wx.FlexGridSizer(1, 2, 6, 6)
        grid_sizer_15 = wx.FlexGridSizer(6, 2, 6, 6)
        grid_sizer_16 = wx.FlexGridSizer(4, 1, 6, 6)
        grid_sizer_9 = wx.FlexGridSizer(1, 2, 0, 10)
        grid_sizer_11 = wx.FlexGridSizer(6, 2, 0, 0)
        grid_sizer_10 = wx.FlexGridSizer(5, 2, 0, 0)
        grid_sizer_10.Add(self.label_0, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_10.Add(self.data['rpms'], 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_10.Add(self.label_1, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_10.Add(self.data['ncycles'], 0, 0, 0)
        grid_sizer_10.Add(self.label_3, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_10.Add(self.data['dtheta_rpm'], 0, 0, 0)
        grid_sizer_10.Add(self.label_4, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_10.Add(self.data['Courant'], 0, 0, 0)
        grid_sizer_10.Add(self.label_5, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_10.Add(self.data['ga'], 0, 0, 0)
        grid_sizer_9.Add(grid_sizer_10, 1, wx.EXPAND, 0)
        grid_sizer_11.Add(self.label_6, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_11.Add(self.data['viscous_flow'], 0, 0, 0)
        grid_sizer_11.Add(self.label_7, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_11.Add(self.data['heat_flow'], 0, 0, 0)
        grid_sizer_11.Add(self.label_8, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_11.Add(self.data['R_gas'], 0, 0, 0)
        grid_sizer_11.Add(self.label_9, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_11.Add(self.data['nstroke'], 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_11.Add(self.label_10, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_11.Add(self.data['engine_type'], 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_11.Add(self.label_11, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_11.Add(self.data['ig_order'], 0, 0, 0)
        grid_sizer_9.Add(grid_sizer_11, 1, wx.EXPAND, 0)
        self.notebook_general.SetSizer(grid_sizer_9)
        grid_sizer_15.Add(self.label_12, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_15.Add(self.data['filesave_state'], 0, 0, 0)
        grid_sizer_15.Add(self.label_13, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_15.Add(self.data['filesave_spd'], 0, 0, 0)
        grid_sizer_15.Add(self.label_14, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_15.Add(self.data['get_state'], 0, 0, 0)
        grid_sizer_15.Add(self.label_15, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_15.Add(self.button_1, 0, 0, 0)
        grid_sizer_15.Add(self.filename, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_15.Add(self.panel_23, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_15.Add(self.label_2, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_15.Add(self.data['nsave'], 0, 0, 0)
#        grid_sizer_15.Add(self.label_17, 0, wx.ALIGN_CENTER_VERTICAL, 0)
#        grid_sizer_15.Add(self.data['nappend'], 0, 0, 0)

        grid_sizer_16b = wx.FlexGridSizer(1, 2, 0, 0)
        grid_sizer_16b.Add(self.label_18, 0, wx.ALIGN_CENTER_VERTICAL, 0)
        grid_sizer_16b.Add(self.data['folder_name'], 0, 0, 0)
        grid_sizer_16.Add(grid_sizer_16b)
        grid_sizer_16.Add(self.data['filein_state'], 0, 0, 0)
        grid_sizer_16.Add(self.data['calc_engine_data'], 0, 0, 0)

        
        grid_sizer_14.Add(grid_sizer_15)
        grid_sizer_14.Add(grid_sizer_16)
        self.notebook_saves.SetSizer(grid_sizer_14)
        self.configure_notebook.AddPage(self.notebook_general, "General")
        self.configure_notebook.AddPage(self.notebook_saves, "I/O & PostProcess")
        configure_sizer.Add(self.configure_notebook, 1, wx.EXPAND, 1)
        self.panel_configure.SetSizer(configure_sizer)
        configure_background.Add(self.panel_configure, 1, wx.EXPAND, 0)
        sizer_buttons.Add(self.accept, 0, wx.ALIGN_RIGHT|wx.ALIGN_CENTER_VERTICAL, 0)
        sizer_buttons.Add(self.help, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_CENTER_HORIZONTAL, 0)
        sizer_buttons.Add(self.cancel, 0, wx.ALIGN_CENTER_VERTICAL|wx.ALIGN_LEFT, 0)
        self.panel_buttons.SetSizer(sizer_buttons)
        configure_background.Add(self.panel_buttons, 0, wx.EXPAND, 0)
        self.SetSizer(configure_background)
        self.Layout()
        # end wxGlade

    def setContextualHelp(self):
		for key in self.data:
			self.data[key].SetHelpText(help_simulation[key])

    def ConfigureAccept(self, event): # wxGlade: formSimulation.<event_handler>
        can_out=1
        for key in self.data:
            if (self.data[key].GetValidator()):
                if not(key in self.listas):
                    if(not(self.data[key].GetValidator().Validate(self,'list'))):
                        can_out=0
                    else:
                        if(not(self.data[key].GetValidator().Validate(self,'number'))):
                            can_out=0

        if(can_out == 0):
            wx.MessageBox("Some fields have some error (empty or no-digit value)!", "Error")

        if can_out == 1:        
            self.EndModal(wx.ID_OK)
            

    def ConfigureCancel(self, event): # wxGlade: formSimulation.<event_handler>
        self.Close()

    def onOpenDialogFile(self, event): # wxGlade: formSimulation.<event_handler>
        filename = ""  # Use  filename as a flag
        dlg = wx.FileDialog(self, message="Choose a file")
        if dlg.ShowModal() == wx.ID_OK:
            filename = dlg.GetPath()
        dlg.Destroy()  # best to do this sooner than later
        if filename:
            self.data['filein_state'].SetValue(filename)
        self.filename.SetLabel(self.data['filein_state'].GetValue())

    def onChangeGetState(self, event): # wxGlade: formSimulation.<event_handler>
        value = self.data['get_state'].GetSelection()
        if value==1:
            self.button_1.Enable(1)
            self.filename.SetLabel(self.data['filein_state'].GetValue())
        else:
            self.button_1.Enable(0)	
            self.filename.SetLabel('')      		  

    def onNStroke(self, event): # wxGlade: formSimulation.<event_handler>
        print "Event handler `onNStroke' not implemented"
        event.Skip()

    #def onCalcPower(self, event):
	#	if self.data['calc_engine_data'].GetValue()==1 or self.data['nappend'].GetValue()==1 or self.data['folder_name'].GetValue()==1 or self.data[19].GetValue()==1:
	#		self.data[20].Enable(True)
	#		self.data[21].Enable(True)
	#	else:
	#		self.data[20].SetValue(bool(0))
	#		self.data[21].SetValue(bool(0))
	#		self.data[20].Enable(False)
	#		self.data[21].Enable(False)
		

# end of class formSimulation


